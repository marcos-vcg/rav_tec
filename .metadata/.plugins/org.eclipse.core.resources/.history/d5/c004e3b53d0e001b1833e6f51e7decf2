package telas;

import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.Comparator;

import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JInternalFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTabbedPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

import classes.Categoria;
import classes.Cliente;
import classes.Dependente;
import classes.Filme;
import classes.Genero;
import classes.Grau;

@SuppressWarnings("serial")
public class Locacao extends JInternalFrame {

	static final int xPosition = 30, yPosition = 30;
	private final Action cancelar = new SwingAction_1();
	private boolean edit = false;
	private boolean editdependente = false;
	
	
	ArrayList<Cliente> cadCliente;

	JTabbedPane abas;
	JPanel pnl_clientes, pnl_locacoes;
	JTextField txf_nome_pesquisa, txf_cpf_pesquisa;
	JButton btn_pesquisar, btn_cadastrar, btn_locacao;
	
	DefaultTableModel tbl_modelo;
	JTable tbl_clientes;
	JScrollPane scp_tbl_clientes;
	
	
	
	JLabel lbl_nome_selecionado, lbl_cpf_selecionado;
	
	DefaultTableModel tbl_modelo_dep;
	JTable tbl_dependentes;
	JScrollPane scp_tbl_dependentes;
	
	JButton btn_tbl_locacao, btn_tbl_devolucao;
	
	int idClienteSelecionado, idDependenteSelecionado; 
	ArrayList<Dependente> temp = new ArrayList<>();
	//clienteSelecionado;
	//Dependente dependenteSelecionado;
	
	
	public Locacao(ArrayList<Filme> cadFilme, ArrayList<Genero> cadGenero, ArrayList<Categoria> cadCategoria, ArrayList<Cliente> cadCliente) {
		super("Locação de Filmes", true, // resizable
				true, // closable
				true, // maximizable
				true);// iconifiable
		setSize(570, 355);
		setLocation(xPosition, yPosition);
		setLayout(null);

		this.cadCliente = cadCliente;
		
		setarElementos();
		adicionarListeners();
		setarTabelaMestre();
		limparComponentes();

	}


	
	
	private void setarElementos () {
		
		// Criar Abas
		abas = new JTabbedPane(JTabbedPane.TOP);
		add(abas).setBounds(10, 11, 540, 300);
		
		
		// Painéis das Abas
		pnl_clientes = new JPanel();
		pnl_clientes.setLayout(null);
		abas.addTab("Clientes", null, pnl_clientes, "Pesquisar Clientes");
		
		pnl_locacoes = new JPanel();
		pnl_locacoes.setLayout(null);
		abas.addTab("Locações", null, pnl_locacoes, "Cadastrar Clientes");
		
		// Aba Consulta Clientes
		pnl_clientes.add(new JLabel("Nome:")).setBounds(20, 11, 81, 14);
		txf_nome_pesquisa = new JTextField(10);
		pnl_clientes.add(txf_nome_pesquisa).setBounds(20, 29, 220, 20);

		pnl_clientes.add(new JLabel("CPF:")).setBounds(270, 11, 120, 14);
		txf_cpf_pesquisa = new JTextField(10);
		pnl_clientes.add(txf_cpf_pesquisa).setBounds(270, 29, 120, 20);
		
		btn_pesquisar = new JButton("Pesquisar");
		pnl_clientes.add(btn_pesquisar).setBounds(420, 29, 100, 20);
		
		btn_cadastrar = new JButton("Cadastrar");
		pnl_clientes.add(btn_cadastrar).setBounds(420, 69, 100, 20);
		
		btn_locacao = new JButton("Locação");
		btn_locacao.setEnabled(false);
		pnl_clientes.add(btn_locacao).setBounds(420, 109, 100, 20);
		
		
		
		// Criar Tabela de Dados
		tbl_modelo = new DefaultTableModel();
		tbl_clientes = new JTable(tbl_modelo);
		scp_tbl_clientes = new JScrollPane(tbl_clientes);
		pnl_clientes.add(scp_tbl_clientes).setBounds(20, 60, 350, 100);
		
		// Preencher Tabela de Dados
		tbl_modelo.addColumn("ID");
		tbl_modelo.addColumn("Nome");
		tbl_modelo.addColumn("CPF");
		//tbl_modelo.addColumn("Email");
		tbl_clientes.getColumnModel().getColumn(0).setPreferredWidth(20);
		tbl_clientes.getColumnModel().getColumn(1).setPreferredWidth(150);
		tbl_clientes.getColumnModel().getColumn(2).setPreferredWidth(60);
		//tbl_clientes.getColumnModel().getColumn(3).setPreferredWidth(80);		
		
		
		
		
		
		
		// Aba Consulta Locacoes
		pnl_locacoes.add(new JLabel("Nome:")).setBounds(20, 11, 81, 14);
		lbl_nome_selecionado = new JLabel("");
		pnl_locacoes.add(lbl_nome_selecionado).setBounds(20, 29, 230, 20);
		

		pnl_locacoes.add(new JLabel("CPF:")).setBounds(270, 11, 98, 14);
		lbl_cpf_selecionado = new JLabel("");
		pnl_locacoes.add(lbl_cpf_selecionado).setBounds(270, 29, 110, 20);
		

	
		
		
		// Locações
		pnl_locacoes.add(new JLabel("Locações:")).setBounds(20, 60, 98, 14);		
		
		// Criar Tabela de Dados
		tbl_modelo_dep = new DefaultTableModel();
		tbl_dependentes = new JTable(tbl_modelo_dep);
		scp_tbl_dependentes = new JScrollPane(tbl_dependentes);
		pnl_locacoes.add(scp_tbl_dependentes).setBounds(20, 80, 500, 150);
		
		// Colunas da Tabela
		tbl_modelo_dep.addColumn("ID");
		tbl_modelo_dep.addColumn("Filme");
		tbl_modelo_dep.addColumn("Genero");
		tbl_modelo_dep.addColumn("Locação");
		tbl_modelo_dep.addColumn("Devolução");
		tbl_modelo_dep.addColumn("Status");
		tbl_dependentes.getColumnModel().getColumn(0).setPreferredWidth(10);
		tbl_dependentes.getColumnModel().getColumn(1).setPreferredWidth(80);
		tbl_dependentes.getColumnModel().getColumn(2).setPreferredWidth(40);
		tbl_dependentes.getColumnModel().getColumn(3).setPreferredWidth(40);
		tbl_dependentes.getColumnModel().getColumn(4).setPreferredWidth(40);
		tbl_dependentes.getColumnModel().getColumn(5).setPreferredWidth(40);
		
		
		// Botões Tabela Detalhe
		btn_tbl_locacao = new JButton("Nova Locação");
		btn_tbl_locacao.setEnabled(false);
		pnl_locacoes.add(btn_tbl_locacao).setBounds(400, 238, 120, 23);
		
		btn_tbl_devolucao = new JButton("Devolução");
		btn_tbl_devolucao.setEnabled(false);
		pnl_locacoes.add(btn_tbl_devolucao).setBounds(20, 238, 120, 23);
		
		
		
		
		
		
	}
	
	private void adicionarListeners() {
		
		// Percebe Ação de Clicar na tabela
		tbl_clientes.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                ListSelectionModel lsm = (ListSelectionModel) e.getSource();
                //altera os botoes para ativados somente se houver linha selecionada
                if(lsm.isSelectionEmpty()) {
                	lbl_nome_selecionado.setText("");
                	lbl_cpf_selecionado.setText("");
                }else {
                	lbl_nome_selecionado.setText(tbl_modelo.getValueAt(tbl_clientes.getSelectedRow(), 1).toString() );
                    lbl_cpf_selecionado.setText(tbl_modelo.getValueAt(tbl_clientes.getSelectedRow(), 2).toString() );
                }
                
                btn_locacao.setEnabled(!lsm.isSelectionEmpty());
                btn_tbl_locacao.setEnabled(!lsm.isSelectionEmpty());
            }
        });
		
		
		tbl_dependentes.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                ListSelectionModel lsm = (ListSelectionModel) e.getSource();
                //altera os botoes para ativados somente se houver linha selecionada
                btn_tbl_devolucao.setEnabled(!lsm.isSelectionEmpty());
            }
        });
				
		
		
		// Ações dos Botões
		btn_pesquisar.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				
				// Limpa Tabela
				tbl_modelo.setNumRows(0);
				String nome = txf_nome_pesquisa.getText().toLowerCase();
				String cpf = txf_cpf_pesquisa.getText().toLowerCase();
				if(nome.isEmpty() && cpf.isEmpty()) {
					setarTabelaMestre();
				} else {
					// Filtra a Tabela
					for (Cliente c : cadCliente) {
                        if(!nome.isEmpty()) {
                        	if(!c.getNome().toLowerCase().contains(nome)) {
                        		continue;
                        	} 	
                        }
                        if(!cpf.isEmpty()) {
                        	if(!c.getCpf().toLowerCase().contains(cpf)) {
                        		continue;
                        	} 
                        }

                        tbl_modelo.addRow(new Object[]{c.getId(), c.getNome(), c.getCpf(), c.getEmail()});
					}
				}	
			}
		});	
		
		
		btn_cadastrar.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				
				
				
			}
		});
		
		
		
		btn_locacao.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {				
				abas.setSelectedIndex(1);
			}
		});
		
		
		
		
		
		
		
		// Alugar e Devolver
		
		btn_tbl_locacao.addActionListener( new ActionListener() {
			public void actionPerformed(ActionEvent e) {				
				
				//idClienteSelecionado = (int) tbl_modelo.getValueAt(tbl_clientes.getSelectedRow(), 0);
				
				if (tbl_dependentes.getSelectedRow() ){
					JOptionPane.showMessageDialog(null, "Campos Obrigatórios Vazios!", "Cadastro Inválido!", JOptionPane.WARNING_MESSAGE);
				} else if(editdependente){
					if(tbl_clientes.getSelectedRow() != -1) {
						idClienteSelecionado = (int) tbl_modelo.getValueAt(tbl_clientes.getSelectedRow(), 0);
						idDependenteSelecionado = (int) tbl_modelo_dep.getValueAt(tbl_dependentes.getSelectedRow(), 0);
						for(int i = 0; i < cadCliente.size(); i++) { 
							if (cadCliente.get(i).getId() == idClienteSelecionado) {
								
							
								JOptionPane.showMessageDialog(null, "Edição efetuada com sucesso!", "Edição Efetuada!", JOptionPane.WARNING_MESSAGE);
								
							}
						}
						
						setarTabelaDetalhe();	
					} else {
						for (Dependente d: temp) {
							if(d.getId() == tbl_modelo_dep.getValueAt(tbl_dependentes.getSelectedRow(), 0)) {
								
							}
							
						
						}
						tbl_modelo_dep.setNumRows(0);
						for (Dependente d: temp) { tbl_modelo_dep.addRow(new Object[]{d.getId(), d.getNome(), d.getGrau()}); }
					}
					
					btn_tbl_locacao.setText("Cadastrar");
					editdependente = false;					
					
					
				} else {
					
					if(tbl_clientes.getSelectedRow() != -1) {
						idClienteSelecionado = (int) tbl_modelo.getValueAt(tbl_clientes.getSelectedRow(), 0);
						for(int i = 0; i < cadCliente.size(); i++) { 
							if (cadCliente.get(i).getId() == idClienteSelecionado) {
		
								if(cadCliente.get(i).getDependentes().size()<3) {
									JOptionPane.showMessageDialog(null, "O Dependente Foi Cadastrado!", "Cadastro Efetuado!", JOptionPane.WARNING_MESSAGE);
									
									setarTabelaDetalhe();
								}else {
									JOptionPane.showMessageDialog(null, "O máximo de Dependentes é 3!", "Cadastro não Efetuado!", JOptionPane.WARNING_MESSAGE);
								}
								
							}
						} 
					} else {
							
						if(temp.size()<3) {
							
							JOptionPane.showMessageDialog(null, "O Dependente Foi Cadastrado!", "Cadastro Efetuado!", JOptionPane.WARNING_MESSAGE);
							
							
							tbl_modelo_dep.setNumRows(0);
							for (Dependente d: temp) { tbl_modelo_dep.addRow(new Object[]{d.getId(), d.getNome(), d.getGrau()}); }
							
						}else {
							JOptionPane.showMessageDialog(null, "O máximo de Dependentes é 3!", "Cadastro não Efetuado!", JOptionPane.WARNING_MESSAGE);
						}
							
					}
					
				}  		
			}
		});	
		
		btn_tbl_devolucao.addActionListener( new ActionListener() {
			public void actionPerformed(ActionEvent e) {				

				
				
			}
		});	
		
		
	}
	
	
	private void setarTabelaMestre() {
		// Monta Tabela
		tbl_modelo.setNumRows(0);
		cadCliente.sort(Comparator.comparing(Cliente::getNome));
		for (Cliente c : cadCliente) { tbl_modelo.addRow(new Object[]{c.getId(), c.getNome(), c.getCpf(), c.getEmail()});	}
	}
	
	private void setarTabelaDetalhe () {
		tbl_modelo_dep.setNumRows(0);
		idClienteSelecionado = (int) tbl_modelo.getValueAt(tbl_clientes.getSelectedRow(), 0);
		
		for(int i = 0; i < cadCliente.size(); i++) { 
			if (cadCliente.get(i).getId() == idClienteSelecionado) {
				cadCliente.get(i).getDependentes().sort(Comparator.comparing(Dependente::getNome));
				for (Dependente d : cadCliente.get(i).getDependentes()) { 
					tbl_modelo_dep.addRow(new Object[]{d.getId(), d.getNome(), d.getGrau()});	
				}
			}
		}
		
		
		
		
	}
	
	
	private void limparComponentes () {
		
		tbl_modelo_dep.setNumRows(0);
		
	}

	private class SwingAction_1 extends AbstractAction {
		public SwingAction_1() {
			putValue(NAME, "Voltar");
			putValue(SHORT_DESCRIPTION, "Some short description");
		}

		public void actionPerformed(ActionEvent e) {
			dispose();
		}
	}
}
